{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","text","author","id","className","classes","item","to","QuoteList","quotes","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","isAscending","sort","quoteA","quoteB","sortQuotes","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACjC,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIL,MAEN,qCAAaC,OAEf,cAAC,IAAD,CAAMK,GAAE,qBAAgBJ,GAAMC,UAAU,MAAxC,iC,iBC0CSI,EAtCG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,EAlBW,SAACT,EAAQU,GAC1B,OAAOV,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIH,EACKE,EAAOlB,GAAKmB,EAAOnB,GAAK,GAAK,EAE7BkB,EAAOlB,GAAKmB,EAAOnB,GAAK,GAAK,KAanBoB,CAAWd,EAAQK,GASxC,OACE,eAAC,WAAD,WACE,qBAAKV,UAAWC,IAAQmB,QAAxB,SACE,yBAAQC,QAVe,WAC3Bf,EAAQgB,KAAK,CACXC,SAAUf,EAASe,SACnBX,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAO7C,kBACQA,EAAqB,aAAe,iBAG9C,oBAAIV,UAAWC,IAAQuB,KAAvB,SACGV,EAAaW,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEE3B,GAAI2B,EAAM3B,GACVD,OAAQ4B,EAAM5B,OACdD,KAAM6B,EAAM7B,MAHP6B,EAAM3B,a,yBC7BR4B,EAXO,WACpB,OACE,sBAAK3B,UAAWC,IAAQ2B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM5B,UAAU,MAAMG,GAAG,YAAzB,6B,gBCkCS0B,UAlCG,WAEhB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAQF,OALAC,qBAAU,WAERL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKjC,UAAU,WAAf,SACE,cAACsC,EAAA,EAAD,MAKFF,EACK,mBAAGpC,UAAU,mBAAb,SAAiCoC,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAKtD,cAAC,EAAD,CAAWlC,OAAQ6B,IAJjB,cAAC,EAAD","file":"static/js/5.2d81a7ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = ({ text, author, id }) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{text}</p>\n        </blockquote>\n        <figcaption>{author}</figcaption>\n      </figure>\n      <Link to={`/allQuotes/${id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, isAscending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (isAscending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = ({ quotes }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/addQuote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\nimport QuoteList from \"./../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  // sendRequest skal ha getAllQuotes tilgjengelig i sitt outer environment\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    // vil kj√∏re getAllQuotes()\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  // Ingen errors, quotes finnes. Rendre dem\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}